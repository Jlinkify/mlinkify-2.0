body {
	font-family: Arial, sans-serif;
	text-align: center;
}

#password-form {
	display: inline-block;
	margin: 0 auto;
	text-align: left;
}
JavaScript:

Copy code
const form = document.getElementById("password-form");

form.addEventListener("submit", (event) => {
	event.preventDefault(); // prevent the form from submitting

	const password = document.getElementById("password").value;
	if (password === "correctpassword") {
		// password is correct, show the protected content
		document.body.innerHTML = "<h1>Protected Content</h1><p>This is the protected content that is only visible to users who enter the correct password.</p>";
	} else {
		// password is incorrect, display an error message
		alert("Incorrect password. Please try again.");
	}
});
Note: This is just a basic example to illustrate how password protection can be implemented on a website. In a real-world application, you should use a more secure method for storing and checking passwords, such as hashing and salting. You should also consider using server-side technologies to handle the password validation, rather than relying solely on client-side JavaScript.




